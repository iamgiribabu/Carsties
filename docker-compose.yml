services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "StrongP@ssw0rd1!"
    ports:
      - "1444:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "StrongP@ssw0rd1!", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s # Give SQL Server time to initialize
  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test:  ["CMD", "mongosh", "--quiet", "127.0.0.1/test", "--eval", "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
  sql-init:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      - sqlserver
    entrypoint: >
      /bin/bash -c "
      sleep 20 &&
      /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P StrongP@ssw0rd1! -i /tmp/init-auctions.sql
      "
    volumes:
      - ./init-auctions.sql:/tmp/init-auctions.sql:ro
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
  auction-svc:
    image: trycatchlearn/auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=DEVELOPMENT
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=Auctions;User Id=sa;Password=StrongP@ssw0rd1!;Encrypt=True;TrustServerCertificate=True
      - IdentityServiceUrl=http://identity-svc
    ports:
      - 5109:80
    depends_on:
      sqlserver :
        condition: service_healthy
      rabbitmq :
        condition: service_healthy
  search-svc:
    image: trycatchlearn/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/DockerFile
    environment:
      - ASPNETCORE_ENVIRONMENT=DEVELOPMENT
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
      - AuctionServiceUrl=http://auction-svc
    ports:
      - 5077:80
    depends_on:
      mongodb :
        condition: service_healthy
      rabbitmq :
        condition: service_healthy
  identity-svc:
    image: trycatchlearn/identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=Identity;User Id=sa;Password=StrongP@ssw0rd1!;Encrypt=True;TrustServerCertificate=True
    ports:
      - 5001:80
    depends_on:
      sqlserver :
        condition: service_healthy
  gateway-svc:
    image: trycatchlearn/gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/DockerFile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 6001:80
volumes:
  mssql_data:
  mongodb_data: